Countdown:
  0.1.0 — Basic countdown for lecture breaks:
    + Basic countdown in seconds
    + Show minutes and seconds
    + Style
    + fix: Show Settings smoothly
    + fix: Remove leading zero when < 10 sec
    + fix: Autoclose Settings
    + feat: Change bg when time is over
    + fix: Close Settings on click outside
    + refactor: Store autoclose timeout in App
    + fix: Break time over text on xs screens
    + fix: Hide timer behind settings
    + fix: Don't autoclose settings, if there was interaction

  0.2.0 — Accept seconds via URL query:
    + chore: Autoupdate lockfile to v2
    + docs: Plan 0.2.0 changes
    + chore: Update project name
    + chore: Autobump vulnerable dependencies
    + chore: Setup ESLint Airbnb base config
    + style: Fix linting errors
    + feat: Accept seconds via URL query
    + fix: Limit accepted time by 45 minutes
    + refactor: Separate contexts
    + chore: Bump project version

  0.2.1 — Upgrade to React 18:
    Separate config and timer contexts
    Move query and timer effects to custom hooks
    Upgrade to React 18
    + refactor: Use SidebarContext to avoid ambiguity

      It is indented to work with settings sidebar in UI.

      However, its previous name (SettingsContext) led to misinterpretation —
      this context was seen as a suitable place for app configs, when it isn't.

    + refactor: Use ConfigContext to provide app configs
    + refactor: Separate timer effects to custom hooks

    + chore: Upgrade to React 18
    + chore: Update CRA-related packages and React Spring

      Generate new CRA project, copy files, adjust package.json.

  0.2.2 — Sort out project dependencies:
    + docs: Add scope for 0.2.2
    + style: Use .jsx for files with heavy JSX usage

      If you need JSX syntax for context providers only, feel free to use .js extension for such files.
    
    + chore: Remove unused Fade.jsx and Rotate.jsx
    + chore: Omit build tools from NPM audit

      Use `npm audit --omit=dev` or custom `npm run audit`.

      https://github.com/facebook/create-react-app/issues/11174

    + chore: Use Sass, not deprecated vulnerable Node Sass

      Node Sass developers deprecate it and recommend moving to Dart Sass, 
      which was renamed to Sass. Source: https://sass-lang.com/blog/libsass-is-deprecated
    
    + style: Mark CSS pseudo-elements with double colons ::
    + chore: Remove commented out CSS

    + chore: Move testing library packages to devDependencies

    + chore: Bump project version to 0.2.2

  0.2.3 — Feature driven development:
    + research
      GitHub experience
        production - toggle flags via query string
        development - toggle from command line
        automated tests - toggle in code
        CI - one build with all flags disabled, another with all flags enabled
        https://github.blog/2021-04-27-ship-code-faster-safer-feature-flags/
      
      Feature flag driven development
        https://featureflags.io

      Post by Pete Hodgson
        https://martinfowler.com/articles/feature-toggles.html
  
    - refactor: Store presets in local storage
      Title and seconds only.

      Add to default presets
      5 min break (dark blue / yellow)
      10 min break (dark blue / yellow)

    - refactor: Organize project by features
      Feature list
        1. countdown
        2. basic presets (duration)
        2. custom duration — customize countdown duration (in seconds) by URL query
        3. presets (duration + colors + message) — choose, start, create, edit, delete
        4. shareable countdown — share link to specific running instance of that countdown
          improvement of existing feature

    - chore: Install React Feature Toggles by ParallelDrive
      https://www.npmjs.com/package/@paralleldrive/react-feature-toggles
    
    - refactor: Setup feature flags

  0.3.0 — Select preset from default in local storage:
    - feat: Store title, colors, final message in presets

      Add to default presets
      25 min work (yellow / dark blue)
      5 sec DEBUG MODE (red / yellow)

  0.4.0 — Select preset with UI:
    - feat: Select preset with UI

  0.5.0 — Edit preset with UI:
    - feat: Edit preset

  0.6.0 — Create preset with UI:
    - feat: Create preset

  0.7.0 — Delete preset with UI:
    - feat: Delete preset

  1.0.0 — Presets release:
    Customize message, colors, time and save in local storage.
    Feature flag
    - feat: Add design for presets

  Backlog:
    - refactor: Pass isInverted via context
    - fix: Add leave animation for TimeOver
    - fix: Switch digits smoothly
    - Add supporting font for buttons?
    - Advanced animations (final countdown)
    - Credits
    - Pause/resume

    x Switch from SCSS to CSS:
      x refactor: Use CSS custom properties, not SCSS variables
      x refactor: Stop using SCSS nesting
      x style: Use CSS files instead of SCSS
      x chore: Remove dependency from Sass

  Milestones:
    + Countdown for lecture breaks — 0.1.0
    + Customize countdown time - 0.2.0
    + Upgrade to React 18 — 0.2.1
    - Presets release - 1.0.0


    - Shareable countdowns? - 2.0.0
      Backend. DB?
      Editor can edit and share timer.
      Reader can share timer.

      Unauthorized visitor can add up to 5 presets, each 25 min max.

    - Presets in DB?
      Backend and DB
